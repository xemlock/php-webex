<?php

class Webex_Model_MeetingSummary extends Webex_Model_Entity
{
    const STATUS_INPROGRESS     = 'INPROGRESS';
    const STATUS_NOT_INPROGRESS = 'NOT_INPROGRESS';

    /**
     * An internal unique ID number for a Meeting Center session.
     * @var string
     */
    protected $_id;

    /**
     * The meeting type ID for a Meeting Center session.
     * @var int
     */
    protected $_type;

    /**
     * The name of the meeting, maximum of 512 characters.
     * @var string
     */
    protected $_name;

    /**
     * The starting date and time for the first (or only) occurrence of
     * the meeting. It also stores information about the time zone for
     * the geographic location of the meeting.
     * @var DateTime
     */
    protected $_startDate;

    /**
     * The duration of the meeting in minutes.
     * @var int
     */
    protected $_duration = 60;

    /**
Determines whether the meeting
displays to public users in Todayâ€™s
Meetings list. Private meetings show
only to the host; invited attendees must
have information from the host about
how to access the meeting.

     * Indicates which users can see this scheduled session in lists of
     * sessions on pages on your WebEx-hosted website. Valid values are:
     * UNLISTED: Unlisted for all users except the host.
     * PUBLIC: Listed for all users.
     * PRIVATE: Listed only for authorized users.
     * @TODO not sure if this should be here
     * 
     * @var bool
     */
    protected $_isPublic = false;

    /**
     * Indicates whether the meeting is either started and active or not
     * active. This value is generated by WebEx and cannot be changed.
     * @var string
     */
    protected $_status = self::STATUS_NOT_INPROGRESS;

    /**
     * The WebEx ID of the user who created the meeting, maximum of
     * 64 characters.
     * @var string
     */
    protected $_hostUsername;

    /**
     * Indicates whether the host is now in the session. This value is
     * generated by WebEx and cannot be changed.
     * @var bool
     */
    protected $_hostJoined = false;

    /**
     * Indicates whether there is at least one participant who has joined
     * the session. This value is generated by WebEx and cannot be changed.
     * @var bool
     */
    protected $_participantsJoined = false;

    /**
     * Indicates if the meeting is TelePresence meeting or not.
     * @var bool
     */
    protected $_telePresence = false;

    /**
     * @return string
     */
    public function getId()
    {
        return $this->_id;
    }

    /**
     * @param  string $id
     */
    public function setId($id)
    {
        $this->_id = (string) $id;
        return $this;
    }

    /**
     * @return string
     */
    public function getName()
    {
        return $this->_name;
    }

    /**
     * @param  string $name
     */
    public function setName($name)
    {
        $this->_name = (string) $name;
        return $this;
    }

    /**
     * @return int
     */
    public function getType()
    {
        return $this->_type;
    }

    /**
     * @param  int $type
     */
    public function setType($type)
    {
        $this->_type = (int) $type;
        return $this;
    }

    /**
     * @return DateTime|null
     */
    public function getStartDate()
    {
        return $this->_startDate;
    }

    /**
     * @param  int|string|DateTime $startDate
     * @throws Exception
     */
    public function setStartDate($startDate)
    {
        $this->_startDate = Webex_Util_Time::toDateTime($startDate);
        return $this;
    }

    /**
     * @return int
     */
    public function getDuration()
    {
        return $this->_duration;
    }

    /**
     * @param  int $duration
     */
    public function setDuration($duration)
    {
        $this->_duration = (int) $duration;
        return $this;
    }

    /**
     * @return bool
     */
    public function isPublic()
    {
        return $this->_isPublic;
    }

    /**
     * @param  bool $flag
     */
    public function setPublic($flag)
    {
        $this->_isPublic = (bool) $flag;
        return $this;
    }

    /**
     * @return string
     */
    public function getStatus()
    {
        return $this->_status;
    }

    /**
     * @param  string $status
     */
    public function setStatus($status)
    {
        $this->_status = (string) $status;
        return $this;
    }

    /**
     * @return string
     */
    public function getHostUsername()
    {
        return $this->_hostUsername;
    }

    /**
     * @param  string $host
     */
    public function setHostUsername($hostUsername)
    {
        $this->_hostUsername = (string) $hostUsername;
        return $this;
    }

    /**
     * @return bool
     */
    public function getHostJoined()
    {
        return $this->_hostJoined;
    }

    /**
     * @param  bool $flag
     */
    public function setHostJoined($flag)
    {
        $this->_hostJoined = (bool) $flag;
        return $this;
    }

    /**
     * @return bool
     */
    public function getParticipantsJoined()
    {
        return $this->_participantsJoined;
    }

    /**
     * @param  bool $flag
     */
    public function setParticipantsJoined($flag)
    {
        $this->_participantsJoined = (bool) $flag;
        return $this;
    }

    /**
     * @return bool
     */
    public function getTelePresence()
    {
        return $this->_telePresence;
    }

    /**
     * @param  bool $flag
     */
    public function setTelePresence($flag)
    {
        $this->_telePresence = (bool) $flag;
        return $this;
    }
}
